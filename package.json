{
  "name": "coding-assistant",
  "displayName": "Claude Coding Assistant",
  "description": "VS Code extension integrating Claude AI with Model Control Protocol (MCP) for intelligent coding assistance",
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "Snippets"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "icon": "media/claude-icon.png",
  "contributes": {
    "commands": [
      {
        "command": "claudeAssistant.askClaudeMCP",
        "title": "Ask Claude (Code Assistant)",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.openChatView",
        "title": "Open Claude Chat",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.openChatViewDirect",
        "title": "Open Claude Chat (Direct)",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.analyzeProject",
        "title": "Analyze Project Structure",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.generateCode",
        "title": "Generate Code with Claude",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.unifiedCodeAssistant",
        "title": "Open Claude Coding Studio",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.openEnhancedChat",
        "title": "Open Enhanced Claude Chat",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.cloneRepository",
        "title": "Clone GitHub Repository",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.pushChanges",
        "title": "Push Changes to GitHub",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.pushChangesWithSelection",
        "title": "Push Selected Changes to GitHub",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.setRepositoryUrl",
        "title": "Set GitHub Repository URL",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.showCommitHistory",
        "title": "Show Commit History",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.listPullRequests",
        "title": "List Pull Requests",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.createPullRequest",
        "title": "Create Pull Request",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.showGitHubLogs",
        "title": "Show GitHub Logs",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.clearGitHubLogs",
        "title": "Clear GitHub Logs",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.createOrUpdateFile",
        "title": "Create or Update File",
        "category": "Claude Assistant"
      },
      {
        "command": "claudeAssistant.openFileManager",
        "title": "Open File Manager",
        "category": "Claude Assistant"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "claude-assistant",
          "title": "Claude Assistant",
          "icon": "media/claude-icon.svg"
        }
      ]
    },
    "views": {
      "claude-assistant": [
        {
          "id": "claude-tools",
          "name": "Claude Tools"
        },
        {
          "id": "claude-github",
          "name": "GitHub Integration"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "claude-tools",
        "contents": "Get help with your code\n[Open Claude Coding Studio](command:claudeAssistant.unifiedCodeAssistant)\n[Ask About Current File](command:claudeAssistant.askClaudeMCP)\n[Analyze Project](command:claudeAssistant.analyzeProject)\n[Create/Update File](command:claudeAssistant.createOrUpdateFile)\n[Open File Manager](command:claudeAssistant.openFileManager)"
      },
      {
        "view": "claude-github",
        "contents": "GitHub Integration\n[Clone Repository](command:claudeAssistant.cloneRepository)\n[Set Repository URL](command:claudeAssistant.setRepositoryUrl)\n[Push All Changes](command:claudeAssistant.pushChanges)\n[Push Selected Changes](command:claudeAssistant.pushChangesWithSelection)\n[Show Commit History](command:claudeAssistant.showCommitHistory)\n[List Pull Requests](command:claudeAssistant.listPullRequests)\n[Create Pull Request](command:claudeAssistant.createPullRequest)"
      }
    ],
    "configuration": {
      "title": "Claude Coding Assistant",
      "properties": {
        "claudeAssistant.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for Claude"
        },
        "claudeAssistant.model": {
          "type": "string",
          "default": "claude-3-7-sonnet-20250219",
          "enum": [
            "claude-3-7-sonnet-20250219",
            "claude-3-5-sonnet-20240620",
            "claude-3-opus-20240229",
            "claude-3-5-haiku-20240307"
          ],
          "description": "Claude model to use"
        },
        "claudeAssistant.maxContextSize": {
          "type": "number",
          "default": 100000,
          "description": "Maximum number of characters to include in context"
        },
        "claudeAssistant.maxTokens": {
          "type": "number",
          "default": 4000,
          "description": "Maximum number of tokens in Claude's response"
        },
        "claudeAssistant.github.usePersonalAccessToken": {
          "type": "boolean",
          "default": false,
          "description": "Use a personal access token for GitHub authentication"
        },
        "claudeAssistant.github.personalAccessToken": {
          "type": "string",
          "default": "",
          "description": "Personal access token for GitHub"
        },
        "claudeAssistant.github.username": {
          "type": "string",
          "default": "",
          "description": "GitHub username for authentication"
        },
        "claudeAssistant.github.logLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "debug",
            "info",
            "warning",
            "error"
          ],
          "description": "Log level for GitHub operations"
        },
        "claudeAssistant.knowledgeBase.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable knowledge base for code context"
        },
        "claudeAssistant.knowledgeBase.storageLimit": {
          "type": "number",
          "default": 1000,
          "description": "Maximum number of documents to store in knowledge base"
        },
        "claudeAssistant.codeGeneration.defaultPath": {
          "type": "string",
          "default": "src",
          "description": "Default path for generated code files"
        },
        "claudeAssistant.codeGeneration.fileStructureTemplates": {
          "type": "object",
          "default": {
            "react": "src/components",
            "api": "src/api",
            "utilities": "src/utils",
            "tests": "tests"
          },
          "description": "Template paths for different types of generated code"
        },
        "claudeAssistant.fileManagement.defaultLocation": {
          "type": "string",
          "default": "src",
          "description": "Default location for new files"
        },
        "claudeAssistant.fileManagement.useSmartPathSuggestion": {
          "type": "boolean",
          "default": true,
          "description": "Use smart path suggestion for new files based on filename and content"
        }
      }
    },
    "keybindings": [
      {
        "command": "claudeAssistant.askClaudeMCP",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "editorTextFocus"
      },
      {
        "command": "claudeAssistant.unifiedCodeAssistant",
        "key": "ctrl+shift+q",
        "mac": "cmd+shift+q"
      },
      {
        "command": "claudeAssistant.generateCode",
        "key": "ctrl+shift+g",
        "mac": "cmd+shift+g"
      },
      {
        "command": "claudeAssistant.createOrUpdateFile",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "claudeAssistant.unifiedCodeAssistant",
          "group": "claudeAssistant@1"
        },
        {
          "command": "claudeAssistant.askClaudeMCP",
          "group": "claudeAssistant@2"
        },
        {
          "command": "claudeAssistant.createOrUpdateFile",
          "group": "claudeAssistant@3"
        }
      ],
      "explorer/context": [
        {
          "command": "claudeAssistant.analyzeProject",
          "group": "claudeAssistant@1"
        },
        {
          "command": "claudeAssistant.createOrUpdateFile",
          "group": "claudeAssistant@2"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "compile": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "lint": "eslint src --ext ts",
    "test": "jest"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/jest": "^29.5.0",
    "@types/minimatch": "^5.1.2",
    "@types/node": "^16.18.0",
    "@types/vscode": "^1.60.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "eslint": "^8.56.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.0.0",
    "webpack": "^5.99.5",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.39.0",
    "axios": "^1.6.5",
    "glob": "^7.2.3",
    "minimatch": "^3.1.2"
  }
}
